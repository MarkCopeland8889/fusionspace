#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const readline = require('readline')

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
})

console.log('üöÄ AI Website Builder Setup\n')

async function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve)
  })
}

async function setup() {
  console.log('Let\'s configure your AI Website Builder!\n')

  // Check if .env.local exists
  const envPath = path.join(process.cwd(), '.env.local')
  const envExists = fs.existsSync(envPath)

  if (envExists) {
    const overwrite = await question('‚ö†Ô∏è  .env.local already exists. Overwrite? (y/N): ')
    if (overwrite.toLowerCase() !== 'y') {
      console.log('Setup cancelled.')
      rl.close()
      return
    }
  }

  console.log('\nüìã Required API Keys:\n')

  // Gemini API Key
  console.log('1. Google Gemini API Key')
  console.log('   Get it from: https://makersuite.google.com/app/apikey')
  console.log('   Cost: ~$0.000375 per website generation\n')
  
  const geminiKey = await question('Enter your Gemini API key: ')

  // Vercel Token
  console.log('\n2. Vercel Token')
  console.log('   Get it from: https://vercel.com/account/tokens')
  console.log('   Create a new token with "Full Account" scope\n')
  
  const vercelToken = await question('Enter your Vercel token: ')

  // Vercel Project ID
  console.log('\n3. Vercel Project ID')
  console.log('   Get it from: https://vercel.com/dashboard')
  console.log('   Or run: vercel ls\n')
  
  const vercelProjectId = await question('Enter your Vercel project ID: ')

  // Optional: Supabase
  console.log('\n4. Supabase (Optional - for database)')
  console.log('   Get it from: https://supabase.com/')
  console.log('   Skip if you don\'t have it yet\n')
  
  const useSupabase = await question('Do you want to configure Supabase? (y/N): ')
  
  let supabaseUrl = ''
  let supabaseKey = ''
  
  if (useSupabase.toLowerCase() === 'y') {
    supabaseUrl = await question('Enter your Supabase URL: ')
    supabaseKey = await question('Enter your Supabase anon key: ')
  }

  // Create .env.local content
  const envContent = `# AI Website Builder - Environment Configuration
# Generated by setup script

# ===== AI & Code Generation =====
# Google Gemini API (Primary - Recommended)
GOOGLE_AI_API_KEY=${geminiKey}

# ===== Live Server & Deployment =====
# Vercel for hosting and deployment
VERCEL_TOKEN=${vercelToken}
VERCEL_PROJECT_ID=${vercelProjectId}

# ===== Database & Storage =====
# Supabase for user data and project storage
SUPABASE_URL=${supabaseUrl}
SUPABASE_ANON_KEY=${supabaseKey}

# ===== Development & Testing =====
# Environment indicator
NODE_ENV=development

# Debug mode
DEBUG=ai-website-builder:*

# Rate limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000
`

  // Write .env.local
  fs.writeFileSync(envPath, envContent)

  console.log('\n‚úÖ Configuration saved to .env.local\n')

  // Next steps
  console.log('üéØ Next Steps:\n')
  console.log('1. Test your setup:')
  console.log('   npm run dev')
  console.log('   Visit: http://localhost:3000\n')
  
  console.log('2. Deploy to Vercel:')
  console.log('   npm install -g vercel')
  console.log('   vercel login')
  console.log('   vercel --prod\n')
  
  console.log('3. Get your Gemini API key:')
  console.log('   https://makersuite.google.com/app/apikey\n')
  
  console.log('4. Get your Vercel credentials:')
  console.log('   Token: https://vercel.com/account/tokens')
  console.log('   Project ID: https://vercel.com/dashboard\n')

  if (useSupabase.toLowerCase() === 'y') {
    console.log('5. Set up Supabase:')
    console.log('   https://supabase.com/\n')
  }

  console.log('üöÄ Your AI Website Builder is ready to go!')

  rl.close()
}

setup().catch(console.error) 